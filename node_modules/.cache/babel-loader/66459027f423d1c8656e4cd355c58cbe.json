{"ast":null,"code":"var _jsxFileName = \"/Users/nehanakrani/Projects/nehanakraniv/src/containers/projects/Projects.js\";\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport Button from \"../../components/button/Button\";\nimport Loading from \"../loading/Loading\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nexport default function Projects() {\n  const GithubRepoCard = lazy(() => import('../../components/githubRepoCard/GithubRepoCard'));\n  const FailedLoading = () => null;\n  const renderLoader = () => /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 30\n    }\n  });\n  const [repo, setrepo] = useState([]);\n  useEffect(() => {\n    getRepoData();\n  }, []);\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: operation => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`\n          }\n        });\n      }\n    });\n    client.query({\n      query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `\n    }).then(result => {\n      setrepoFunction(result.data.user.pinnedItems.edges);\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n      setrepoFunction(\"Error\");\n      console.log(\"Because of this Error, nothing is shown in place of Projects section. Projects section not configured\");\n    });\n  }\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n  if (!(typeof repo === 'string' || repo instanceof String)) {\n    return /*#__PURE__*/React.createElement(Suspense, {\n      fallback: renderLoader(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      id: \"opensource\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"project-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Open Source Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"repo-cards-div-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, repo.map((v, i) => {\n      return /*#__PURE__*/React.createElement(GithubRepoCard, {\n        repo: v,\n        key: v.node.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 20\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Button, {\n      text: \"More Projects\",\n      className: \"project-button\",\n      href: socialMediaLinks.github,\n      newTab: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(FailedLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"names":["React","useState","useEffect","lazy","Suspense","ApolloClient","gql","Button","Loading","openSource","socialMediaLinks","Projects","GithubRepoCard","FailedLoading","renderLoader","repo","setrepo","getRepoData","client","uri","request","operation","setContext","headers","authorization","githubConvertedToken","query","githubUserName","then","result","setrepoFunction","data","user","pinnedItems","edges","console","log","catch","error","array","String","map","v","i","node","id","github"],"sources":["/Users/nehanakrani/Projects/nehanakraniv/src/containers/projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport Button from \"../../components/button/Button\";\nimport Loading from \"../loading/Loading\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\n\n\nexport default function Projects() {\n  const GithubRepoCard = lazy(() => import('../../components/githubRepoCard/GithubRepoCard'));\n  const FailedLoading = () => null ;\n  const renderLoader = () => <Loading />;\n  const [repo, setrepo] = useState([]);\n\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });\n\n    client\n      .query({\n        query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `,\n      })\n      .then((result) => {\n        setrepoFunction(result.data.user.pinnedItems.edges);\n        console.log(result);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setrepoFunction(\"Error\");\n        console.log(\"Because of this Error, nothing is shown in place of Projects section. Projects section not configured\");\n      });\n  }\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n  if (!(typeof repo === 'string' || repo instanceof String)){\n  return (\n    <Suspense fallback={renderLoader()}>\n      <div className=\"main\" id=\"opensource\">\n        <h1 className=\"project-title\">Open Source Projects</h1>\n        <div className=\"repo-cards-div-main\">\n          {repo.map((v, i) => {\n            return <GithubRepoCard repo={v} key={v.node.id} />;\n          })}\n        </div>\n        <Button text={\"More Projects\"} className=\"project-button\" href={socialMediaLinks.github} newTab={true} />\n      </div>\n    </Suspense>\n  );\n} else{\n    return(<FailedLoading />);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}